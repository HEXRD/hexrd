name: conda-package

on:
  push:
    branches: [ master ]
    tags: ["*"]
  pull_request:
    branches: [ master ]

jobs:
  package:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Linux",
            os: ubuntu-latest
          }
        - {
            name: "MacOSX",
            os: macos-latest
          }
        - {
            name: "Windows",
            os: windows-latest
          }
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install conda
      uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: 3.8
        activate-environment: hexrd
        auto-activate-base: false

    - name: Install build requirements
      run: |
          conda activate hexrd
          conda install anaconda conda-build

      # This is need to ensure ~/.profile or ~/.bashrc are used so the activate
      # command works.
      shell: bash -l {0}

    - name: Build the package (host)
      if: ${{ matrix.config.name != 'Linux' }}
      run: |
          conda activate hexrd
          mkdir output
          conda build -c anaconda -c conda-forge --output-folder output/ conda.recipe/
      # This is need to ensure ~/.profile or ~/.bashrc are used so the activate
      # command works.
      shell: bash -l {0}

    - name: Build the package (container)
      if: ${{ matrix.config.name == 'Linux' }}
      uses: docker://centos:6.10
      with:
        entrypoint: /github/workspace/.github/workflows/container_build.sh

    - name: Upload the package to anaconda channel (tag push to master)
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      run: |
          conda activate hexrd
          anaconda --token ${{ secrets.ANACONDA_TOKEN }} upload --user HEXRD output/**/*.tar.bz2
      # This is need to ensure ~/.profile or ~/.bashrc are used so the activate
      # command works.
      shell: bash -l {0}

    - name: Upload the package to anaconda prerelease channel (upload push to master)
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
          conda activate hexrd
          anaconda --token ${{ secrets.ANACONDA_TOKEN }} upload --user HEXRD --label hexrd-prerelease output/**/*.tar.bz2
      # This is need to ensure ~/.profile or ~/.bashrc are used so the activate
      # command works.
      shell: bash -l {0}

    - name: Get version for the artifact names
      id: describe
      run: echo "::set-output name=version::$(git describe --tag)"

    - name: Upload the package to github
      uses: actions/upload-artifact@v2
      with:
        name: HEXRD-${{ matrix.config.name }}-${{ steps.describe.outputs.version }}.tar.bz2
        path: output/**/*.tar.bz2
